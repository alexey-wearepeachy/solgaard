{% comment %}
	GEMPAGE BUILDER (https://apps.shopify.com/gempage)

	You SHOULD NOT modify source code in this page because
	It is automatically generated from GEMPAGE BUILDER
	Try to edit page with the live editor.
{% endcomment %}

        jQuery(function() {
            var $module = jQuery('#m-1570091472475').children('.module');
            $module.gfV3Product();
        }); 
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
        jQuery(function() {
            var $module = jQuery('#m-1617053870962').children('.module');
            $module.gfV3Product();
        }); 
    
    
    
    
    
    
    
    
    
    
    
(function( jQuery ){
  var $hero = jQuery('#m-1611608260807');
  var $module = jQuery('#m-1611608260807').children('.module');

  var mode = jQuery('.gryffeditor').hasClass('editing') ? 'dev' : 'production';
  var $heroLink = $hero.children('.hero-link');
  if (mode == 'dev' && $heroLink.length > 0) {
    $hero.children('.hero-link').hide();
  }
  if (mode == 'production' && $heroLink.length > 0) {
    $module.off('click.openLink').on('click.openLink', function (e) {
      var $target = jQuery(e.target);
      if ($target.length > 0) {
        var linkTarget = typeof $target.attr('href') !== "undefined" ? $target.attr('href') : "";
        if (linkTarget == "") {
          var link = typeof $heroLink.attr('href') !== "undefined" ? $heroLink.attr('href') : "";
          var newTab = typeof $heroLink.attr('target') !== "undefined" ? $heroLink.attr('target') : "";
          if (link != "") {
            if (newTab == "") {
              window.location.href = link;
            } else {
              window.open(link, newTab);
            }
          }
        }
      };
    })
  }

  var height = jQuery.trim($module.attr("data-height"));
  if (height == undefined || height == "") {
    $hero.css("height", "auto!important");
  } else {
    $hero.css("height", "inherit");
  }


  var effect = $module.attr('data-effect');
  var transition = $module.attr('data-transition');

  if (effect == 'effect-zoom') {
    $module.parent().addClass(effect);

    setTimeout(function () {
      var backgroundImage = $module.parent().css('background-image');
      var backgroundSize = $module.parent().css('background-size');
      var backgroundPosition = $module.parent().css('background-position');
      $module.siblings('.gf_hero-bg-wrap').css({
        'background-image': 'inherit',
        'background-size': 'inherit',
        'background-position': 'inherit',
        '-webkit-transition': 'transform ' + transition + 's ease-in-out',
        '-moz-transition': 'transform ' + transition + 's ease-in-out',
        '-ms-transition': 'transform ' + transition + 's ease-in-out',
        '-o-transition': 'transform ' + transition + 's ease-in-out',
        'transition': 'transform ' + transition + 's ease-in-out'
      })
      $module.siblings('.gf_hero-bg-wrap').children('.gf_hero-bg').css({
        'background-image': 'inherit',
        'background-size': 'inherit',
        'background-position': 'inherit',
        '-webkit-transition': 'transform ' + transition + 's ease-in-out',
        '-moz-transition': 'transform ' + transition + 's ease-in-out',
        '-ms-transition': 'transform ' + transition + 's ease-in-out',
        '-o-transition': 'transform ' + transition + 's ease-in-out',
        'transition': 'transform ' + transition + 's ease-in-out'
      });
    }, 300);
  } else{
    $module.parent().removeClass("effect-zoom");
  }

  if ($module.attr('data-fixedMode') == '1') {
    function changeImage() {
      var backgroundImage = $module.parent().css('background-image');
      if (backgroundImage) {
        backgroundImage = backgroundImage.replace('url(', '').replace(')', '').replace(/\"/gi, "");
        $module.find('.gf_hero-fixed').attr('src', backgroundImage);
        $module.parent().addClass('gf_hero-fixed-mode');
      }
    }
    changeImage();
    let windowWidth = jQuery(window).width();
    let timeoutResize = 0;
    jQuery(window).resize(function () {
      if (jQuery(window).width() == windowWidth) {
        return;
      }
      windowWidth = jQuery(window).width();

      if (timeoutResize) {
        clearTimeout(timeoutResize);
        timeoutResize = 0;
      }

      timeoutResize = window.setTimeout(function () {
        changeImage();
      }, 16);
    });
  } else {
    $module.parent().removeClass('gf_hero-fixed-mode');
  }
})( window.GemQuery || jQuery );
    
    
    
    
        jQuery(function() {
  var $module = jQuery('#m-1605217210128').children('.module');
}); 
    
    
    
    
    
    
        jQuery(function() {
  var $module = jQuery('#m-1605566133408').children('.module');
}); 
    
    
    
    
    
    
    
        jQuery(function() {
  var $module = jQuery('#m-1605217210225').children('.module');
  $module.gfV3Product();
}); 
    
    
    
    
        jQuery(function() {
    var $module = jQuery('#m-1605217210113').children('.module');
    var effect = $module.attr('data-effect');
    $module.gfV3ProductImage({
        'effect': effect
    })
});
    
        jQuery(function() {
  var $module = jQuery('#m-1605217210196').children('.module');
  $module.gfV3ProductImageList({
      onImageClicked: function(imageUrl, imageZoomUrl) {}
  });

  var style = $module.attr('data-style');
  switch(style) {
      case 'slider':
          var navspeed = $module.data('navspeed'),
              navlg = $module.data('navlg'),
              navmd = $module.data('navmd'),
              navsm = $module.data('navsm'),
              navxs = $module.data('navxs'),
              collg = $module.data('collg'),
              colmd = $module.data('colmd'),
              colsm = $module.data('colsm'),
              colxs = $module.data('colxs'),
              dotslg = $module.data('dotslg'),
              dotsmd = $module.data('dotsmd'),
              dotssm = $module.data('dotssm'),
              dotsxs = $module.data('dotsxs'),

              marginlg = parseInt($module.data('mlg')),
              marginmd = parseInt($module.data('mmd')),
              marginsm = parseInt($module.data('msm')),
              marginxs = parseInt($module.data('mxs'));

          var mode = jQuery('.gryffeditor').hasClass('editing') ? 'dev' : 'production';
          if(mode == 'production') {
              var loop = $module.data('loop');
          } else {
              var loop = 0;
          }
          $module.find('.gf_product-images-list').owlCarousel({
              mouseDrag: false,
              navSpeed: navspeed,
              autoWidth: !1,
              loop: loop,
              responsiveClass:true,
              responsive:{
                  0:{
                      items:colxs,
                      nav: navxs,
                      dots:dotsxs,
                      margin: marginxs
                  },
                  768:{
                      items:colsm,
                      nav: navsm,
                      dots:dotssm,
                      margin: marginsm
                  },
                  992:{
                      items:colmd,
                      nav: navmd,
                      dots:dotsmd,
                      margin: marginmd
                  },
                  1200:{
                      items:collg,
                      nav: navlg,
                      dots:dotslg,
                      margin: marginlg
                  }
              }
          }); 
          break;
  }
}); 
    
        jQuery(function() {
  var $module = jQuery('#m-1605217210177').children('.module');
});
    
        jQuery(function() {
  var $module = jQuery('#m-1605566048990').children('.module');
}); 
    
    
    
    
    
    
jQuery(function() {
        var $module = jQuery('#m-1605217385018').children('.module');
        $module.gfV3ProductPrice({
            displayCurrency: true
        });
    });
    
jQuery(function() {
  var $module = jQuery('#m-1605217361548').children('.module');
  var mode = jQuery('.gryffeditor').hasClass('editing') ? 'dev' : 'production';

  var blankOption = $module.attr('data-blankoption');
  var blankOptionText = $module.attr('data-blankoptiontext');
  var style = $module.attr('data-style');

  $module.gfV3ProductVariants({
    mode: mode,
    blankOption: blankOption,
    blankOptionText: blankOptionText,
    style: style,
    onVariantSelected: function(variant, $select) {}
  });
}); 
    
        jQuery(function() {
  var $module = jQuery('#m-1605217210173').children('.module');
  $module.gfV3ProductCartButton({ onItemAdded: function(data) {}});
}); 
    
    
    
        jQuery(function() {
  var $module = jQuery('#m-1605647506277').children('.module');
}); 
    
    
    
    
    
    
        jQuery(function() {
  var $module = jQuery('#m-1605647506328').children('.module');
}); 
    
    
    
    
    
    
        jQuery(function() {
  var $module = jQuery('#m-1605647533437').children('.module');
}); 
    
    
    
    
    
    
        jQuery(function() {
  var $module = jQuery('#m-1605647533523').children('.module');
}); 
    
    
    
    
    
    
        jQuery(function() {
            var $module = jQuery('#m-1611608708317').children('.module');
            var single   = $module.attr('data-single');
            var openDefault  = $module.attr('data-openDefault');
            var openTab  = $module.attr('data-openTab');
            var mode     = jQuery('.gryffeditor').hasClass('editing') ? 'dev' : 'production';

            if(openDefault == 0 || openDefault == '0') {
                openTab = '0';
            }

            $module.gfAccordion({
                single: single,
                openTab: openTab,
                mode: mode
            });

            var borderColor = $module.attr('data-borderColor');
            var borderSize = $module.attr('data-borderSize');

            $module.children('[data-accordion]').children('[data-control]').css('border-bottom', borderSize + ' solid ' + borderColor);
            $module.children('[data-accordion]').children('[data-content]').children().css('border-bottom', borderSize + ' solid ' + borderColor);
        });
    